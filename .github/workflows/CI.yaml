name: CI

on:
  - push

jobs:
  Build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - double: aarch64-linux                   # target we are building for
            system: aarch64-linux                   # system we are building on
            runner: ubuntu-24.04-arm                # GitHub runner the build is running on
            flake: bundled                          # flake package to build
            interpreter: /lib/ld-linux-aarch64.so.1 # path to libc interpreter
          - double: x86_64-linux
            system: x86_64-linux
            runner: ubuntu-24.04
            flake: bundled
            interpreter: /lib64/ld-linux-x86-64.so.2
          - double: aarch64-darwin
            system: aarch64-darwin
            runner: macos-15
            flake: bundled
          - double: x86_64-darwin
            system: x86_64-darwin
            runner: macos-13
            flake: bundled
          - double: x86_64-windows
            system: x86_64-linux
            runner: ubuntu-24.04
            flake: bundled-windows
    runs-on: ${{ matrix.target.runner }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Nix
        uses: cachix/install-nix-action@v30
      - name: Cache
        uses: cachix/cachix-action@v15
        with:
          name: softvare-group
          authToken: ${{ secrets.CACHIX_AUTH_TOKEN }}
      - name: Build
        run: nix build -L .#packages.${{ matrix.target.system }}.${{ matrix.target.flake }}
      - name: Set interpreter
        if: ${{ matrix.target.interpreter }}
        run: |
          cp -rL result output
          rm -rf result
          chmod +w output/bin/*
          nix run nixpkgs#patchelf -- --set-interpreter ${{ matrix.target.interpreter }} output/bin/*
          chmod -w output/bin/*
          mv output result
      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: d4-${{ matrix.target.double }}
          path: result
